Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): INSERT INTO `users` (`id`,`name`,`lastName`,`email`,`password`,`isDriver`,`token`,`createdAt`,`updatedAt`) VALUES (DEFAULT,'JUan','Cordoba','amcordobag@gmail.com','$2a$08$qsc0W2z3fyiCHswjHLEML.JoXuZcEQeE85jT8Qe.rUEKY2tPsT8o2',true,'','2019-11-09 01:10:27','2019-11-09 01:10:27');Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token`, `createdAt`, `updatedAt` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`createdAt`, `customer`.`updatedAt`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `location`.`createdAt` AS `location.createdAt`, `location`.`updatedAt` AS `location.updatedAt`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`createdAt` AS `accounts.createdAt`, `accounts`.`updatedAt` AS `accounts.updatedAt`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`createdAt`, `payment`.`updatedAt`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `user`.`createdAt` AS `user.createdAt`, `user`.`updatedAt` AS `user.updatedAt`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`createdAt` AS `account.createdAt`, `account`.`updatedAt` AS `account.updatedAt`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`createdAt`, `customer`.`updatedAt`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `location`.`createdAt` AS `location.createdAt`, `location`.`updatedAt` AS `location.updatedAt`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`createdAt` AS `accounts.createdAt`, `accounts`.`updatedAt` AS `accounts.updatedAt`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): INSERT INTO `locations` (`id`,`name`,`createdAt`,`updatedAt`) VALUES (DEFAULT,'San JOse','2019-11-09 01:11:49','2019-11-09 01:11:49');Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`createdAt`, `account`.`updatedAt`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name`, `paymentTerm`.`createdAt` AS `paymentTerm.createdAt`, `paymentTerm`.`updatedAt` AS `paymentTerm.updatedAt` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`createdAt`, `customer`.`updatedAt`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `location`.`createdAt` AS `location.createdAt`, `location`.`updatedAt` AS `location.updatedAt`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`createdAt` AS `accounts.createdAt`, `accounts`.`updatedAt` AS `accounts.updatedAt`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `paymentTerms` AS `paymentTerm`;Executing (default): INSERT INTO `locations` (`id`,`name`,`createdAt`,`updatedAt`) VALUES (DEFAULT,'aa','2019-11-09 01:12:13','2019-11-09 01:12:13');Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`createdAt`, `account`.`updatedAt`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name`, `paymentTerm`.`createdAt` AS `paymentTerm.createdAt`, `paymentTerm`.`updatedAt` AS `paymentTerm.updatedAt` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`createdAt`, `customer`.`updatedAt`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `location`.`createdAt` AS `location.createdAt`, `location`.`updatedAt` AS `location.updatedAt`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`createdAt` AS `accounts.createdAt`, `accounts`.`updatedAt` AS `accounts.updatedAt`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `paymentTerms` AS `paymentTerm`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): INSERT INTO `locations` (`id`,`name`,`createdAt`,`updatedAt`) VALUES (DEFAULT,'aa','2019-11-09 01:14:10','2019-11-09 01:14:10');Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `locations` AS `location`;Executing (default): INSERT INTO `locations` (`id`,`name`,`createdAt`,`updatedAt`) VALUES (DEFAULT,'San Jose','2019-11-09 01:25:42','2019-11-09 01:25:42');Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `locations` AS `location`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `locations` AS `location`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`createdAt`, `customer`.`updatedAt`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `location`.`createdAt` AS `location.createdAt`, `location`.`updatedAt` AS `location.updatedAt`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`createdAt` AS `accounts.createdAt`, `accounts`.`updatedAt` AS `accounts.updatedAt`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `locations` AS `location`;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): INSERT INTO `customers` (`id`,`citizenId`,`name`,`lastName`,`email`,`phone`,`fullName`,`createdAt`,`updatedAt`,`locationId`) VALUES (DEFAULT,'122222','aaa','aaa','a@a',22222,'aaa aaa','2019-11-09 01:27:38','2019-11-09 01:27:38',1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`createdAt`, `customer`.`updatedAt`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `location`.`createdAt` AS `location.createdAt`, `location`.`updatedAt` AS `location.updatedAt`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`createdAt` AS `accounts.createdAt`, `accounts`.`updatedAt` AS `accounts.updatedAt`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`createdAt`, `customer`.`updatedAt`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `location`.`createdAt` AS `location.createdAt`, `location`.`updatedAt` AS `location.updatedAt`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`createdAt` AS `accounts.createdAt`, `accounts`.`updatedAt` AS `accounts.updatedAt`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name`, `accounts->paymentTerm`.`createdAt` AS `accounts.paymentTerm.createdAt`, `accounts->paymentTerm`.`updatedAt` AS `accounts.paymentTerm.updatedAt` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): INSERT INTO `customers` (`id`,`citizenId`,`name`,`lastName`,`email`,`phone`,`fullName`,`locationId`) VALUES (DEFAULT,'1212','Adrian','aasd','A@A',12121,'Adrian aasd',1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): INSERT INTO `accounts` (`id`,`name`,`initialAmmount`,`actualAmmount`,`numberOfPayments`,`charge`,`paymentTermId`,`customerId`) VALUES (DEFAULT,'AAA',6.66,6.66,3,2.22,1,1);Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): INSERT INTO `accounts` (`id`,`name`,`initialAmmount`,`actualAmmount`,`numberOfPayments`,`charge`,`paymentTermId`,`customerId`) VALUES (DEFAULT,'AAA',6.66,6.66,3,2.22,1,1);Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '1';Executing (default): INSERT INTO `payments` (`id`,`ammount`,`approved`,`date`,`accountId`,`userId`) VALUES (DEFAULT,2.22,false,'2019-11-09 01:33:47',1,1);Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '1';Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `ammount`, `approved`, `date`, `accountId`, `userId` FROM `payments` AS `payment` WHERE `payment`.`id` = 1;Executing (default): UPDATE `payments` SET `approved`=true WHERE `id` = 1Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '2';Executing (default): INSERT INTO `payments` (`id`,`ammount`,`approved`,`date`,`accountId`,`userId`) VALUES (DEFAULT,2.22,false,'2019-11-09 01:36:40',2,1);Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '2';Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `id`, `ammount`, `approved`, `date`, `accountId`, `userId` FROM `payments` AS `payment` WHERE `payment`.`id` = 2;Executing (default): UPDATE `payments` SET `approved`=true WHERE `id` = 2Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '2';Executing (default): INSERT INTO `payments` (`id`,`ammount`,`approved`,`date`,`accountId`,`userId`) VALUES (DEFAULT,2.22,false,'2019-11-09 01:37:28',2,1);Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '2';Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `id`, `ammount`, `approved`, `date`, `accountId`, `userId` FROM `payments` AS `payment` WHERE `payment`.`id` = 3;Executing (default): UPDATE `payments` SET `approved`=true WHERE `id` = 3Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`zoneId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`zoneId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`zoneId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`zoneId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`zoneId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`zoneId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`zoneId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `accountId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`accountId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `driverId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `accountId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`accountId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `driverId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `accountId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`accountId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `driverId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `accountId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`accountId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `driverId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `accountId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`accountId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `driverId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `accountId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`accountId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `driverId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `accountId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`accountId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `driverId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `accountId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`accountId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `driverId` INTEGER NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `paymentTermId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `customerId` INTEGER, `paymentTermId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`customerId` AS `accounts.customerId`, `accounts`.`paymentTermId` AS `accounts.paymentTermId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): CREATE TABLE IF NOT EXISTS `locations` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `locations` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `locationId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`locationId`) REFERENCES `locations` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): INSERT INTO `customers` (`id`,`citizenId`,`name`,`lastName`,`email`,`phone`,`fullName`,`locationId`) VALUES (DEFAULT,'222','aa','aa','a@a',222,'aa aa',1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): INSERT INTO `accounts` (`id`,`name`,`initialAmmount`,`actualAmmount`,`numberOfPayments`,`charge`,`paymentTermId`,`customerId`) VALUES (DEFAULT,'aa',48888.84,48888.84,22,2222.22,1,1);Executing (default): SELECT `id`, `name` FROM `locations` AS `location`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`locationId`, `location`.`id` AS `location.id`, `location`.`name` AS `location.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `locations` AS `location` ON `customer`.`locationId` = `location`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '1';Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name` FROM `zones` AS `zone`;Executing (default): SELECT `id`, `name` FROM `zones` AS `zone`;Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name` FROM `zones` AS `zone`;Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPrefered` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPrefered` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPrefered` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPrefered` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPrefered` AS `addresses.isPrefered`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPrefered` AS `addresses.isPrefered`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPrefered` AS `addresses.isPrefered`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPrefered` AS `addresses.isPrefered`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPrefered` AS `addresses.isPrefered`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPrefered` AS `addresses.isPrefered`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): INSERT INTO `customers` (`id`,`citizenId`,`name`,`lastName`,`email`,`phone`,`fullName`,`zoneId`) VALUES (DEFAULT,'116700319','Adrian','Cordoba','amcorodbag@gmail.com',60230514,'Adrian Cordoba',1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPrefered` AS `addresses.isPrefered`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPrefered` AS `addresses.isPrefered`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPrefered` AS `addresses.isPrefered`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): INSERT INTO `accounts` (`id`,`name`,`initialAmmount`,`actualAmmount`,`numberOfPayments`,`charge`,`paymentTermId`,`customerId`) VALUES (DEFAULT,'iPad Mini',625000,625000,25,25000,3,1);Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `cobros_v2`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `cobros_v2`Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): INSERT INTO `accounts` (`id`,`name`,`initialAmmount`,`actualAmmount`,`numberOfPayments`,`charge`,`paymentTermId`,`customerId`) VALUES (DEFAULT,'iPhone 11 Pro',1080000,1080000,24,45000,3,1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '1';Executing (default): INSERT INTO `payments` (`id`,`ammount`,`approved`,`date`,`accountId`,`userId`) VALUES (DEFAULT,25000,false,'2019-12-30 07:18:32',1,1);Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `id`, `ammount`, `approved`, `date`, `accountId`, `userId` FROM `payments` AS `payment` WHERE `payment`.`id` = 1;Executing (default): UPDATE `payments` SET `approved`=true WHERE `id` = 1Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '1';Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '2';Executing (default): INSERT INTO `payments` (`id`,`ammount`,`approved`,`date`,`accountId`,`userId`) VALUES (DEFAULT,45000,false,'2019-12-30 07:20:32',2,1);Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '2';Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `id`, `ammount`, `approved`, `date`, `accountId`, `userId` FROM `payments` AS `payment` WHERE `payment`.`id` = 2;Executing (default): UPDATE `payments` SET `approved`=true WHERE `id` = 2Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '2';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): INSERT INTO `accounts` (`id`,`name`,`initialAmmount`,`actualAmmount`,`numberOfPayments`,`charge`,`paymentTermId`,`customerId`) VALUES (DEFAULT,'Carro',5600000,5600000,56,100000,3,1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): INSERT INTO `users` (`id`,`name`,`lastName`,`email`,`password`,`isDriver`,`token`) VALUES (DEFAULT,'Adrian','Cordoba','amcordobag@gmail.com','$2a$08$7UGPzu67C6LZFPzjsrMh8.NA.qodppoZcBh4bOwybUa3M.VXEqoPu',true,'');Executing (default): INSERT INTO `users` (`id`,`name`,`lastName`,`email`,`password`,`isDriver`,`token`) VALUES (DEFAULT,'Christian','Arley','amcordobag@gmail.com','$2a$08$SfALzbP6c9b5jBbisHq5COSsXw24330dkkk/6VI29QQTy/bz17Bgi',false,'');Executing (default): INSERT INTO `paymentTerms` (`id`,`name`) VALUES (DEFAULT,'Mensual');Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): INSERT INTO `paymentTerms` (`id`,`name`) VALUES (DEFAULT,'Mensual');Executing (default): INSERT INTO `paymentTerms` (`id`,`name`) VALUES (DEFAULT,'Quincenal');Executing (default): INSERT INTO `paymentTerms` (`id`,`name`) VALUES (DEFAULT,'Semanal');Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): INSERT INTO `customers` (`id`,`citizenId`,`name`,`lastName`,`email`,`phone`,`fullName`,`zoneId`) VALUES (DEFAULT,'1-1111-1111','Erick','Morales','emorales@h.co',60230514,'Erick Morales',1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `payment`.`id`, `payment`.`ammount`, `payment`.`approved`, `payment`.`date`, `payment`.`accountId`, `payment`.`userId`, `user`.`id` AS `user.id`, `user`.`name` AS `user.name`, `user`.`lastName` AS `user.lastName`, `user`.`email` AS `user.email`, `user`.`password` AS `user.password`, `user`.`isDriver` AS `user.isDriver`, `user`.`token` AS `user.token`, `account`.`id` AS `account.id`, `account`.`name` AS `account.name`, `account`.`initialAmmount` AS `account.initialAmmount`, `account`.`actualAmmount` AS `account.actualAmmount`, `account`.`interestRate` AS `account.interestRate`, `account`.`numberOfPayments` AS `account.numberOfPayments`, `account`.`charge` AS `account.charge`, `account`.`alreadyPay` AS `account.alreadyPay`, `account`.`paymentTermId` AS `account.paymentTermId`, `account`.`customerId` AS `account.customerId` FROM `payments` AS `payment` LEFT OUTER JOIN `users` AS `user` ON `payment`.`userId` = `user`.`id` LEFT OUTER JOIN `accounts` AS `account` ON `payment`.`accountId` = `account`.`id` WHERE `payment`.`approved` = false;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `detail` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `detail` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): INSERT INTO `customers` (`id`,`citizenId`,`name`,`lastName`,`email`,`phone`,`fullName`,`zoneId`) VALUES (DEFAULT,'1111111','Erick','Morales','a@a.com',11111,'Erick Morales',1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `detail` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `detail` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): INSERT INTO `addresses` (`id`,`street`,`city`,`state`,`country`,`detail`) VALUES (DEFAULT,'1','1','1','CR','aaaa');Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): INSERT INTO `addresses` (`id`,`street`,`city`,`state`,`country`,`detail`) VALUES (DEFAULT,'2','1','1','CR','sad');Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): INSERT INTO `accounts` (`id`,`name`,`initialAmmount`,`actualAmmount`,`numberOfPayments`,`charge`,`paymentTermId`,`customerId`) VALUES (DEFAULT,'sas',32.33,32.33,1,32.33,2,1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): INSERT INTO `addresses` (`id`,`street`,`city`,`state`,`country`,`detail`) VALUES (DEFAULT,'2','1','1','CR','asd');Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): INSERT INTO `addresses` (`id`,`street`,`city`,`state`,`country`,`detail`,`customerId`) VALUES (DEFAULT,'1','1','1','CR','aaa',1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): INSERT INTO `addresses` (`id`,`street`,`city`,`state`,`country`,`detail`,`customerId`) VALUES (DEFAULT,'San Miguel','Desamparados','San José','CR','Prueba',1);Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `payments`.`id` AS `payments.id`, `payments`.`ammount` AS `payments.ammount`, `payments`.`approved` AS `payments.approved`, `payments`.`date` AS `payments.date`, `payments`.`accountId` AS `payments.accountId`, `payments`.`userId` AS `payments.userId`, `payments->user`.`id` AS `payments.user.id`, `payments->user`.`name` AS `payments.user.name`, `payments->user`.`lastName` AS `payments.user.lastName`, `payments->user`.`email` AS `payments.user.email`, `payments->user`.`password` AS `payments.user.password`, `payments->user`.`isDriver` AS `payments.user.isDriver`, `payments->user`.`token` AS `payments.user.token` FROM `accounts` AS `account` LEFT OUTER JOIN `payments` AS `payments` ON `account`.`id` = `payments`.`accountId` LEFT OUTER JOIN `users` AS `payments->user` ON `payments`.`userId` = `payments->user`.`id` WHERE `account`.`id` = '1';Executing (default): SELECT `account`.`id`, `account`.`name`, `account`.`initialAmmount`, `account`.`actualAmmount`, `account`.`interestRate`, `account`.`numberOfPayments`, `account`.`charge`, `account`.`alreadyPay`, `account`.`paymentTermId`, `account`.`customerId`, `paymentTerm`.`id` AS `paymentTerm.id`, `paymentTerm`.`name` AS `paymentTerm.name` FROM `accounts` AS `account` LEFT OUTER JOIN `paymentTerms` AS `paymentTerm` ON `account`.`paymentTermId` = `paymentTerm`.`id`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): SELECT `id`, `name` FROM `paymentTerms` AS `paymentTerm`;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `accounts->paymentTerm`.`id` AS `accounts.paymentTerm.id`, `accounts->paymentTerm`.`name` AS `accounts.paymentTerm.name` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `paymentTerms` AS `accounts->paymentTerm` ON `accounts`.`paymentTermId` = `accounts->paymentTerm`.`id` WHERE `customer`.`id` = '1';Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `detail` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `zones` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `zones` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `customers` (`id` INTEGER NOT NULL auto_increment , `citizenId` VARCHAR(255), `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `phone` VARCHAR(255), `fullName` VARCHAR(255), `zoneId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`zoneId`) REFERENCES `zones` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `customers` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `paymentTerms` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `paymentTerms` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `accounts` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `initialAmmount` DOUBLE PRECISION, `actualAmmount` DOUBLE PRECISION, `interestRate` DOUBLE PRECISION, `numberOfPayments` DOUBLE PRECISION, `charge` DOUBLE PRECISION, `alreadyPay` TINYINT(1), `paymentTermId` INTEGER, `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`paymentTermId`) REFERENCES `paymentTerms` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `accounts` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `addresses` (`id` INTEGER NOT NULL auto_increment , `street` VARCHAR(255), `city` VARCHAR(255), `state` VARCHAR(255), `country` VARCHAR(255), `detail` VARCHAR(255), `latitude` DOUBLE PRECISION, `longitude` DOUBLE PRECISION, `isPreferred` TINYINT(1), `customerId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `addresses` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `lastName` VARCHAR(255), `email` VARCHAR(255), `password` VARCHAR(255), `isDriver` TINYINT(1), `token` VARCHAR(255), PRIMARY KEY (`id`)) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `users` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `payments` (`id` INTEGER NOT NULL auto_increment , `ammount` DOUBLE PRECISION, `approved` TINYINT(1), `date` DATETIME, `accountId` INTEGER, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`accountId`) REFERENCES `accounts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `payments` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routes` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `state` INTEGER, `driverId` INTEGER, `createdById` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`driverId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`createdById`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routes` FROM `carley`Executing (default): CREATE TABLE IF NOT EXISTS `routeDetails` (`id` INTEGER NOT NULL auto_increment , `state` INTEGER, `commtent` VARCHAR(255), `customerId` INTEGER, `routeId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`customerId`) REFERENCES `customers` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`routeId`) REFERENCES `routes` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;Executing (default): SHOW INDEX FROM `routeDetails` FROM `carley`Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `id`, `name`, `lastName`, `email`, `password`, `isDriver`, `token` FROM `users` AS `user` WHERE `user`.`email` = 'amcordobag@gmail.com' LIMIT 1;Executing (default): SELECT `customer`.`id`, `customer`.`citizenId`, `customer`.`name`, `customer`.`lastName`, `customer`.`email`, `customer`.`phone`, `customer`.`fullName`, `customer`.`zoneId`, `zone`.`id` AS `zone.id`, `zone`.`name` AS `zone.name`, `accounts`.`id` AS `accounts.id`, `accounts`.`name` AS `accounts.name`, `accounts`.`initialAmmount` AS `accounts.initialAmmount`, `accounts`.`actualAmmount` AS `accounts.actualAmmount`, `accounts`.`interestRate` AS `accounts.interestRate`, `accounts`.`numberOfPayments` AS `accounts.numberOfPayments`, `accounts`.`charge` AS `accounts.charge`, `accounts`.`alreadyPay` AS `accounts.alreadyPay`, `accounts`.`paymentTermId` AS `accounts.paymentTermId`, `accounts`.`customerId` AS `accounts.customerId`, `addresses`.`id` AS `addresses.id`, `addresses`.`street` AS `addresses.street`, `addresses`.`city` AS `addresses.city`, `addresses`.`state` AS `addresses.state`, `addresses`.`country` AS `addresses.country`, `addresses`.`detail` AS `addresses.detail`, `addresses`.`latitude` AS `addresses.latitude`, `addresses`.`longitude` AS `addresses.longitude`, `addresses`.`isPreferred` AS `addresses.isPreferred`, `addresses`.`customerId` AS `addresses.customerId` FROM `customers` AS `customer` LEFT OUTER JOIN `zones` AS `zone` ON `customer`.`zoneId` = `zone`.`id` LEFT OUTER JOIN `accounts` AS `accounts` ON `customer`.`id` = `accounts`.`customerId` LEFT OUTER JOIN `addresses` AS `addresses` ON `customer`.`id` = `addresses`.`customerId`;Executing (default): SELECT `zone`.`id`, `zone`.`name`, `customers`.`id` AS `customers.id`, `customers`.`citizenId` AS `customers.citizenId`, `customers`.`name` AS `customers.name`, `customers`.`lastName` AS `customers.lastName`, `customers`.`email` AS `customers.email`, `customers`.`phone` AS `customers.phone`, `customers`.`fullName` AS `customers.fullName`, `customers`.`zoneId` AS `customers.zoneId` FROM `zones` AS `zone` LEFT OUTER JOIN `customers` AS `customers` ON `zone`.`id` = `customers`.`zoneId`;